module brewerslab {

  namespace "http://brewerslab.mellon-collie.net/";
  prefix brewerslab;

  
  description "This yang module provides the basic data structure for the brewerslab
  homebrew automation software.";

  revision 2018-04-01 {
    description "First version with basic stats.";
  }

  container brewhouse {
    description "Status for the brewhouse itself, excluding recipes";


    container temperature {
      // implemented by TemperatureProvider

      container fermentation {
        leaf monitor {
          description "This determines if we should monitor the probe.";
          type boolean;
          config false;
        }

        leaf setpoint {
          type brewerslab:temperature;
          default 17.0;
        }

        leaf highpoint {
          description "The temperature at which we need to start actively cooling.";
          type brewerslab:temperature;
          default 17.3;
        }

        leaf lowpoint {
          description "The temperature at which we need to start actively heating.";
          type brewerslab:temperature;
          default 16.7;
        }

        container probe {
          leaf id {
            description "The probe id to provide measurements.";
            type string;
          }
        } // end of probe

        container results {

          leaf latest {
            type brewerslab:temperature;
            config false;
            default 0.00;
          }

          container average {

            description "This container is theoretical";

            leaf minute {
              type brewerslab:temperature;
              config false;
              default 0.00;
            }
            leaf hourly {
              type brewerslab:temperature;
              config false;
              default 0.00;
            }
            leaf daily {
              type brewerslab:temperature;
              config false;
              default 0.00;
            }
          }

        }
      }

      container hardware {
        list probe {
          key id;
          leaf id {
            description "A given probe id - usually a hardware addressable identifier.";
            type string;
          }

          list offsets {
            description "One or more offsets, if the temperature measured is > low and <= high then 
            the offset will be applied. This is used because the accuracy of DS18B20 probes varies
            with higher temperatures.";
            key "low high";

            leaf low {
              type brewerslab:temperature;
            }
            leaf high {
              type brewerslab:temperature;
            }
            leaf offset {
              type brewerslab:temperature;
            }
          }
        } // end of probe
      } // end hardware

    } //end of temperatures


    container power {
    
      description "This collects together the power control of the brewery.
      
      Unfortuntely this part of the model provides a few issues with complexity.

      1) Enumerations - PYANG Bind *does* validate to make sure a leaf (like mode)
      has a valid value - but doesn't apply the default. So we can't dump the object
      *UNTIL* we have populated all defaults

      2) Validations - if we have the CLI setting data it needs to be aware of the
      valiations otherwise it can set bad data
      ";

      container heating {
        // implemented by ssr

        leaf mode {
          type enumeration {
            enum HLT;
            enum KETTLE;
          }
        }

        list elements {
          key element;

          leaf element {
            type enumeration {
              enum A;
              enum B;
            }
          }

          leaf forceoff {
            type boolean;
          }

          leaf active {
            type boolean;
            config false;
          }


        }
      }


    }

  } //end of brewhouse

  container ingredients {
    
    list fermentable {
      key ingredient;
      
      leaf ingredient {
        type string;
      }
    }

    // ofcourse this moves into groups
    list adjunct {
      key ingredient; 
      leaf ingredient {
        type string;
      }
    }

    list hops {
      key ingredient;
      leaf ingredient {
        type string;
      }
    }
  }// end ingredients


  container recipes {
    list recipe {
      key recipename; 
      leaf recipename {
        type string;
      }
    }
  } // end recipes


  container brewlog {

  } // end brewlog


  typedef temperature {
     type decimal64 {
         fraction-digits 2;
     }
  }
}
